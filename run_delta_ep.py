import delta_ep
def main():
    print('Multiplication symbol must be expressed with a *, ** for powers')
    print('Quadratics must be written in from x**n, where n is an integer')
    print('Linear equations must be written in form n*x + c, where n,c is an integer')
    print('=================================================================')
    limit = str(input('What does x go to?: '))
    equation  = input('What is the equation?: ')
    print('=================================================================')
    if '**' in equation:
        b = delta_ep.Quadratic(limit, equation)
        b.multiply()
        b.factor()
        print ('Specific Definition:')
        print (str(b))
        print('=================================================================')
        print ('Scratch:')
        print ('\tTo set a bound on x, notice that |{0} - {1}| = {2}'.format(b.fx,str(b.answer), b.factored))
        print ('\tTake d = 1')
        print ('\t{0}|x - {1}|'.format(b.bound, b.goesto))
        print ('\tThen we can choose d = e/{0}'.format(b.bound))
        print('=================================================================')
        print ('Proof:')
        print ('Choose d = min(1, e/{0})'.format(b.bound))
        print ('\t|{0} - {1}| = {2}'.format(b.fx, b.answer, b.factored))
        print ('\t           <= {0} * |x - {1}| <= {0}(e/{0}) = e'.format(b.bound, b.goesto))
        print ('QED')
    else:
        a = delta_ep.Linear(limit, equation)
        print ('Specific Definition:')
        print (str(a))
        print('=================================================================')
        print ('Proof:')
        print ('choose d = {0}'.format(a.delta))
        print ('\t 0 < |x - {0}| < d'.format(a.limit))
        print ('\t 0 < |x - {0}| < {1}'.format(a.limit, a.delta))
        print ('\t 0 < |{0}| < e'.format(a.factored))
        print ('\t 0 < |{0}| < e'.format(a.to_factor))
        print ('\t |({0}) - {1}| < e'.format(a.fx, a.answer))
        print ('QED')

if __name__ == '__main__':
    main()
